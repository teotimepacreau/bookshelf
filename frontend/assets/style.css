/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
   margin: 0; 
   padding: 0;
}

*{
  accent-color: var(--surface1);
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
   scroll-behavior: smooth;
}

/* Remove default margin in favour of better control in authored CSS */
body, h1, h2, h3, h4, p,
figure, blockquote, dl, dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul,
ol {
  list-style: none;
}

/* Set core body defaults */
body {
  font-family: system-ui, 'Segoe UI', 'Helvetica Neue', sans-serif;
}

/* Set shorter line heights on headings and text-wrap */
h1, h2, h3, h4 {
  line-height: 1.2;
  text-wrap: balance;
}


/* A elements that don't have a class get default styles */


button { 
   cursor: pointer;
   background-color: unset;
 }

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input, button,
textarea, select {
  font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10rem;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

/* More consistent, styleable hr*/ 
 hr { 
   border-width: 1px 0 0 0; 
   color: inherit; 
   height: 0; 
   overflow: visible; 
 }

*:focus-visible{
  transition: all 0.2s ease;
  box-shadow: 0px 0px 1px 3px var(--surface1);
  border-radius: inherit;
}

input[type="radio"]:focus-visible{
  box-shadow: none;
  outline-offset: 4px;
  outline-color: var(--surface1);
}

input[type="checkbox"]:focus-visible{
  box-shadow: none;
  outline-offset: 4px;
  outline-color: var(--surface1);
}

/* Increase the size of the checkbox */
input[type="checkbox"] {
  width: calc(.6*var(--rythme)); /* Adjust the width */
  height: calc(.6*var(--rythme)); /* Adjust the height */
}

button:focus-visible{
  outline: none;
} 

input[type = "search"] { 
  appearance: none; 
  border: none; 
  outline: none; 
 }
 input[type="text"]:focus-visible,
 input[type="password"]:focus-visible {
  border: none;
  border-bottom: 1px solid var(--accent);
  background-color: var(--accentwith10opacity);
  outline: none;
  box-shadow: none;
}





:root{
    --rythme: 1rlh;
    --bg: oklch(99% 0.005 200);
    --accent: oklch(30% 0.2 200);
    --accentwith10opacity:oklch(from var(--accent) l c h / 10%);
    --surface1: oklch(50% 0.02 200);
    --surface1with5opacity: oklch(from var(--surface1) l c h / 5%);
    --surface1with10opacity: oklch(from var(--surface1) l c h / 10%);
    --shadow: oklch(5% 0.02 200 / 20%)
}

body {
  background-color: var(--bg);
}

#main-container {
  margin-top: var(--rythme);
  display: grid;
  grid-template-columns: minmax(100px, 0.5fr) 2fr;
  gap: calc(2*var(--rythme));
}

#homepage-container {
  padding: var(--rythme);
}

#library {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap : calc(2*var(--rythme));
}

/* HEADER */
#header-flexer {
  display: flex;
  justify-content: space-between;
}

#btn-connexion {
  position: relative;
  padding-block: calc(0.125*var(--rythme));
  padding-inline: calc(0.5*var(--rythme));
  border: 1px ridge transparent;
  background-color: var(--surface1with10opacity);
  border-radius: 0.3rem;
  box-shadow: 0.5px 0.5px 1px 0px var(--shadow);
  transition: all 0.2s ease;
  line-height: 1rlh;
}

#btn-connexion:hover {
  background-color: var(--surface1with10opacity);
  border: 1px ridge var(--surface1);
}

dialog {
  padding: var(--rythme);
  border: 1px solid transparent;
  border-radius: 0.3rem;
}

dialog > form {
  display: flex;
  flex-direction: column;
  gap: calc(0.25*var(--rythme));
}

dialog input {
  appearance: none;
  border: none;
  border-bottom: 1px solid var(--surface1);
  background-color: var(--surface1with5opacity);
  border-radius: .2rem .2rem 0 0;
}

#connexion-btn-flexer {
  margin-top: calc(0.5*var(--rythme));
  display: flex;
  gap: calc(0.25*var(--rythme));
}

/* SEARCH BAR */
#search-bar-container {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin-top: var(--rythme);
  outline: 1px solid var(--surface1);
  border-radius: 0.2rem;
}

#search-bar-container > * {
  flex: 1;
}

#search-input {
  width: 100%;
  padding-inline: calc(0.3*var(--rythme));
}

#search-btn {
  flex-grow: 0;
  border: none;
  padding-inline: calc(.4*var(--rythme));
  transition: all 0.2s ease-out;
  padding-block: calc(0.1*var(--rythme));

}

#search-btn i {
  background-color: var(--surface1with5opacity);
  padding: calc(0.2*var(--rythme));
  border-radius: 50%;
}

#search-btn:hover{
  background-color: var(--surface1with5opacity);
}

#search-btn:hover i {
  background-color: white;
}

/* FILTER */
.dropdown-icon {
  transform: rotate(180deg);
}
#filter-container {
  margin-top: var(--rythme);
  position: relative;
}
#filter-button {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--rythme);
  outline: 1px solid var(--surface1);
  border-radius: 0.2rem;
  border: none;
  padding-inline: calc(0.3*var(--rythme));
  padding-block: calc(0.1*var(--rythme));
}

#filter-button i {
  background-color: var(--surface1with5opacity);
  padding: calc(0.2*var(--rythme));
  border-radius: 50%;
  transition: all 0.3s ease-out;
}

#filter-button i:hover {
  background-color: var(--surface1with10opacity);
}

#all-filters{
  display: none;
  margin-top: calc(0.25*var(--rythme));
  width: 100%;
  position: absolute;
  padding: calc(0.5*var(--rythme));
  border: none;
  background-color: var(--surface1with5opacity); 
  border-radius: 0.2rem;
  border: none;
 }

#star-filter-rating-divider{
  margin-block: calc(0.25*var(--rythme));
}

.star-checkboxes{
  cursor: pointer;
  display: flex;
  gap: 1ch;
  line-height: 1rlh;
  align-items: baseline;
  transition: background-color 0.3s ease-out;
  padding: calc(0.25*var(--rythme));
  border-radius: 0.15rem;
}

.star-checkboxes:hover{
  background-color: var(--surface1with10opacity);
}

.star-checkboxes i {
  color: var(--surface1);
}

.star-group {
  display: flex;
  align-items: center;
  gap: 0.25ch;
}

.filters-visible {
  display: block!important;
  animation: fade-in 0.2s ease-out;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: scale(0.98);
  }to{
    opacity: 1;
    transform: scale(1);
  }
}